<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ability Point Allocation</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        .stat {
            margin: 10px 0;
        }
        button {
            margin: 0 5px;
        }
    </style>
</head>
<body>
    <h1>Allocate Your ablity Points</h1>
    <p>Available Points: <span id="available-points">30</span></p>

    <div id="stats-container">
        <div class="stat">
            STR: <span id="STR">1</span>
            <button onclick="adjustStat('STR', 1)">+</button>
            <button onclick="adjustStat('STR', -1)">-</button>
        </div>
        <div class="stat">
            PER: <span id="PER">1</span>
            <button onclick="adjustStat('PER', 1)">+</button>
            <button onclick="adjustStat('PER', -1)">-</button>
        </div>
        <div class="stat">
            END: <span id="END">1</span>
            <button onclick="adjustStat('END', 1)">+</button>
            <button onclick="adjustStat('END', -1)">-</button>
        </div>
        <div class="stat">
            CHAR: <span id="CHAR">1</span>
            <button onclick="adjustStat('CHAR', 1)">+</button>
            <button onclick="adjustStat('CHAR', -1)">-</button>
        </div>
        <div class="stat">
            INT: <span id="INT">1</span>
            <button onclick="adjustStat('INT', 1)">+</button>
            <button onclick="adjustStat('INT', -1)">-</button>
        </div>
        <div class="stat">
            AGL: <span id="AGL">1</span>
            <button onclick="adjustStat('AGL', 1)">+</button>
            <button onclick="adjustStat('AGL', -1)">-</button>
        </div>
        <div class="stat">
            LUC: <span id="LUC">1</span>
            <button onclick="adjustStat('LUC', 1)">+</button>
            <button onclick="adjustStat('LUC', -1)">-</button>
        </div>
    </div>
    <button onclick="saveToCookies()">Save to Cookies</button>
    <button onclick="loadFromCookies()">Load from Cookies</button>
    <br><br>
    <label for="race">Race:</label>
    <select id="race" onchange="updateOptions()">
        <option value="">-- Select a race --</option>
        <option value="Sapien">Sapien</option>
        <option value="Robot">Robot</option>
        <option value="Mutant">Mutant</option>
    </select>

    <br><br>

    <label for="subclasses">Subclasses:</label>
    <select id="subclasses">
        <option value="">-- Select a subclass --</option>
    </select>

    <script>
        const stats = {
            STR: 1,
            PER: 1,
            END: 1,
            CHAR: 1,
            INT: 1,
            AGL: 1,
            LUC: 1
        };
        let availablePoints = 30;

        function adjustStat(stat, amount) {
            if (amount > 0 && availablePoints > 0 && stats[stat] < 10) {
                stats[stat] += amount;
                availablePoints -= amount;
            } else if (amount < 0 && stats[stat] > 1) {
                stats[stat] += amount;
                availablePoints -= amount;
            }
            updateUI();
        }

        function updateUI() {
            for (let stat in stats) {
                document.getElementById(stat).textContent = stats[stat];
            }
            document.getElementById('available-points').textContent = availablePoints;
        }

        function saveToCookies() {
            for (let stat in stats) {
                document.cookie = `${stat}=${encodeURIComponent(stats[stat])}; max-age=${9999 * 24 * 60 * 60}; path=/`;
            }
            const race = document.getElementById('race').value;
            const subclass = document.getElementById('subclasses').value;
            document.cookie = `race=${encodeURIComponent(race)}; max-age=${9999 * 24 * 60 * 60}; path=/`;
            document.cookie = `subclass=${encodeURIComponent(subclass)}; max-age=${9999 * 24 * 60 * 60}; path=/`;
            alert('Data saved to cookies!');
        }

        function loadFromCookies() {
            availablePoints = 30;
            const cookies = document.cookie.split('; ');
            cookies.forEach(cookie => {
                const [key, value] = cookie.split('=');
                if (stats.hasOwnProperty(key)) {
                    stats[key] = parseInt(decodeURIComponent(value));
                    availablePoints -= stats[key] - 1;
                } else if (key === 'race') {
                    document.getElementById('race').value = decodeURIComponent(value);
                    updateOptions();
                } else if (key === 'subclass') {
                    document.getElementById('subclasses').value = decodeURIComponent(value);
                }
            });
            updateUI();
        }

        const options = {
            Sapien: ["Human", "Ghoul"],
            Robot: ["Protectrons", "Mr. Handys", "Assaultrons", "Eyebots"],
            Mutant: ["Super Mutants", "Mutated Abominations"]
        };

        function updateOptions() {
            const race = document.getElementById('race').value;
            const subclassesDropdown = document.getElementById('subclasses');

            // Clear existing options
            subclassesDropdown.innerHTML = '<option value="">-- Select a subclass --</option>';

            // Populate the second dropdown based on the selected race
            if (options[race]) {
                options[race].forEach(item => {
                    const optionElement = document.createElement('option');
                    optionElement.value = item.toLowerCase();
                    optionElement.textContent = item;
                    subclassesDropdown.appendChild(optionElement);
                });
            }
        }
    </script>
</body>
</html>